name: Version Bump
run-name: Version Bump - v${{ inputs.version_number }}

on:
  workflow_dispatch:
    inputs:
      version_number:
        description: "New version (example: '2.1.0')"
        required: true
        type: string

permissions: {}

env:
  _BRANCH: main
  _BOT_NAME: "bw-ghapp[bot]"
  _BOT_EMAIL: "178206702+bw-ghapp[bot]@users.noreply.github.com"
  _VERSION_FILE: version.json
  _VERSION_NUMBER: ${{ inputs.version_number }}

jobs:
  bump_version:
    name: Bump version to v${{ inputs.version_number }}
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Validate version input
        uses: bitwarden/gh-actions/version-check@BRE-1186-add-semver-support-in-version-check-action
        with:
          version: ${{ env._VERSION_NUMBER }}
          validation_type: semver

      - name: Log in to Azure
        uses: bitwarden/gh-actions/azure-login@main
        with:
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          client_id: ${{ secrets.AZURE_CLIENT_ID }}

      - name: Get Azure Key Vault secrets
        id: get-kv-secrets
        uses: bitwarden/gh-actions/get-keyvault-secrets@main
        with:
          keyvault: gh-org-bitwarden
          secrets: "BW-GHAPP-ID,BW-GHAPP-KEY"

      - name: Log out from Azure
        uses: bitwarden/gh-actions/azure-logout@main

      - name: Generate GH App token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: app-token
        with:
          app-id: ${{ steps.get-kv-secrets.outputs.BW-GHAPP-ID }}
          private-key: ${{ steps.get-kv-secrets.outputs.BW-GHAPP-KEY }}

      - name: Check out branch
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          #ref: ${{ env._BRANCH }}
          token: ${{ steps.app-token.outputs.token }}

      - name: Configure Git
        run: |
          git config --local user.name "$_BOT_NAME"
          git config --local user.email "$_BOT_EMAIL"

      - name: Get current version
        id: current-version
        run: |
          CURRENT_VERSION=$(jq -r '.version' "$_VERSION_FILE")
          echo "version=$CURRENT_VERSION" >> "$GITHUB_OUTPUT"

      - name: Verify input version
        env:
          CURRENT_VERSION: ${{ steps.current-version.outputs.version }}
          NEW_VERSION: ${{ env._VERSION_NUMBER }}
        run: |
          # Error if version has not changed.
          if [[ "$NEW_VERSION" == "$CURRENT_VERSION" ]]; then
            echo "Version has not changed."
            exit 1
          fi

          # Check if version is newer.
          printf '%s\n' "${CURRENT_VERSION}" "${NEW_VERSION}" | sort -C -V
          if [ $? -eq 0 ]; then
            echo "Version check successful."
          else
            echo "Version check failed."
            exit 1
          fi

      - name: Bump Version
        id: bump-version-override
        uses: bitwarden/gh-actions/version-bump@main
        with:
          file_path: "$_VERSION_FILE"
          version: ${{ env._VERSION_NUMBER }}

      - name: Check if version changed
        id: version-changed
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changes_to_commit=TRUE" >> "$GITHUB_OUTPUT"
          else
            echo "changes_to_commit=FALSE" >> "$GITHUB_OUTPUT"
            echo "No changes to commit!";
          fi

      - name: Commit files
        if: ${{ steps.version-changed.outputs.changes_to_commit == 'TRUE' }}
        run: git commit -m "Bumped sm-action version to $_VERSION_NUMBER" -a

      - name: Push changes
        if: ${{ steps.version-changed.outputs.changes_to_commit == 'TRUE' }}
        run: git push
