name: Release
run-name: Release sm-action - ${{ inputs.release_type }}

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release Options"
        required: true
        default: "Release"
        type: choice
        options:
          - Release
          - Dry Run

env:
  _RELEASE_BRANCH_NAME: main
  _VERSION_FILE: version.json

jobs:
  release:
    name: "Release sm-action"
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: Checkout Branch
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Branch check
        if: ${{ inputs.release_type != 'Dry Run' }}
        run: |
          if [[ "$GITHUB_REF" != "refs/heads/main" ]]; then
            echo "==================================="
            echo "[!] Can only release from the 'main' branch"
            echo "==================================="
            exit 1
          fi

      - name: Get latest release version
        id: get-latest-release
        uses: bitwarden/gh-actions/get-release-version@main
        with:
          repository: bitwarden/sm-action
          trim: true

      - name: Get current version
        id: current-version
        run: |
          CURRENT_VERSION=$(jq -r '.version' "$_VERSION_FILE")
          echo "version=$CURRENT_VERSION" >> "$GITHUB_OUTPUT"

      - name: Verify input version
        env:
          CURRENT_VERSION: ${{ steps.current-version.outputs.version }}
          LATEST_RELEASE_VERSION: ${{ steps.get-latest-release.outputs.version }}
        run: |
          # Error if version has not changed.
          if [[ "$LATEST_RELEASE_VERSION" == "$CURRENT_VERSION" ]]; then
            echo "Version has not changed."
            exit 1
          fi

          # Check if version is newer.
          printf '%s\n' "${LATEST_RELEASE_VERSION}" "${CURRENT_VERSION}" | sort -C -V
          if [ $? -eq 0 ]; then
            echo "Version check successful."
          else
            echo "Version check failed."
            exit 1
          fi

      - name: Download all release artifacts
        uses: bitwarden/gh-actions/download-artifacts@main
        with:
          workflow: build-test.yml
          workflow_conclusion: success
          artifacts: "sm-action-*"
          branch: ${{ env._RELEASE_BRANCH_NAME }}

      - name: Create release
        if: ${{ inputs.release_type != 'Dry Run' }}
        uses: ncipollo/release-action@bcfe5470707e8832e12347755757cec0eb3c22af # v1.18.0
        env:
          NEW_VERSION: ${{ steps.current-version.outputs.version }}
        with:
          artifacts: "./sm-action-*"
          commit: ${{ github.sha }}
          tag: v${{ env.NEW_VERSION }}
          name: v${{ env.NEW_VERSION }}
          body: "<insert release notes here>"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
