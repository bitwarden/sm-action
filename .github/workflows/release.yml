name: Release
run-name: Release sm-action ${{ inputs.release_type }}

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release Options"
        required: true
        default: "Release"
        type: choice
        options:
          - Release
          - Dry Run

jobs:
  release:
    name: "Release sm-action"
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: Checkout Branch
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      - name: Branch check
        if: ${{ inputs.release_type != 'Dry Run' }}
        run: |
          if [[ "$GITHUB_REF" != "refs/heads/main" ]]; then
            echo "==================================="
            echo "[!] Can only release from the 'main' branch"
            echo "==================================="
            exit 1
          fi

      - name: Get latest release version
        id: get-latest-release
        run: |
          LATEST_RELEASE_VERSION=$(curl --silent "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/latest" | jq -r '.tag_name')
          echo "Latest release version is $latest_version"
          echo "latest_version=${LATEST_RELEASE_VERSION#v}" >> $GITHUB_OUTPUT

      - name: Get current action version
        id: current-version
        run: |
          CURRENT_VERSION=$(cat package.json | jq -r '.version')
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Verify input version
        env:
          CURRENT_PKG_VERSION: ${{ steps.current-version.outputs.version }}
          LATEST_RELEASE_VERSION: ${{ steps.get-latest-release.outputs.latest_version }}
        run: |
          # Error if version has not changed.
          if [[ "$LATEST_RELEASE_VERSION" == "$CURRENT_PKG_VERSION" ]]; then
            echo "Version has not changed."
            exit 1
          fi

          # Check if version is newer.
          printf '%s\n' "${LATEST_RELEASE_VERSION}" "${CURRENT_PKG_VERSION}" | sort -C -V
          if [ $? -eq 0 ]; then
            echo "Version check successful."
          else
            echo "Version check failed."
            exit 1
          fi

      - name: Configure Git
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "Github Actions"

      - name: Create release
        if: ${{ inputs.release_type != 'Dry Run' }}
        uses: ncipollo/release-action@440c8c1cb0ed28b9f43e4d1d670870f059653174 # v1.16.0
        env:
          PKG_VERSION: ${{ steps.current-version.outputs.version }}
        with:
          commit: ${{ github.sha }}
          tag: v${{ env.PKG_VERSION }}
          name: v${{ env.PKG_VERSION }}
          body: "<insert release notes here>"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
